/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

//#define HOST_OS 2
//#include "helper.h"
#include "german-keymap.h"

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

// ZMK_UNICODE_PAIR(lin_ae, N0, N0, E, N4, N0, N0, C, N4)
// ZMK_UNICODE_SINGLE(ü ü , N0, N0, N5, C)

/ {
    chosen {
      zmk,battery = &vbatt;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "VBATT";
    };
        behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        am: alpha_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_MT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            retro-tap;
        };
    };
    // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
};

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  BACSP|  1  |  2  |  3   |  4   |  5          |                              |  6   |  7    |  8    |  9   |   0   |   ß   |
// |  ESC  |  Q  |  W  |  E   |  R   |  T          |                              |  Y   |  U    |  I    |  O   |   P   |   Ü   |
// |  TAB  |  A  |  S  |  D   |  F   |  G          |                              |  H   |  J    |  K    |  L   |   Ö   |   Ä   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B          |    MUTE     |    |   Play P  |  N   |  M    |  ,    |  .   |   /   | RIGHT |
//               | GUI | ALT  | CTRL | LOWER SPACE | Raise ENTER |    | RAISE DEL | BSP  | LEFT  |  UP   | DOWN |
            bindings = <
&kp BSPC  &kp N1        &kp N2        &kp N3       &kp N4        &kp N5                                         &kp N6    &kp N7      &kp N8       &kp N9      &kp N0         &kp MINUS
&kp ESC   &kp Q         &kp W         &kp E        &kp R         &kp T                                          &kp Y     &kp U       &kp I        &kp O       &kp P          &kp LBKT
&kp TAB   &hm LSHFT A   &hm LCTRL S   &hm LALT D   &hm LGUI F    &kp G                                          &kp H     &hm RGUI J  &hm RALT K   &hm RCTRL L &hm RSHFT SEMI &kp SQT
&kp LSHFT &kp Z         &kp X         &kp C        &kp V         &kp B            &kp C_MUTE      &kp C_PP      &kp N     &kp M       &kp COMMA    &kp DOT     &kp FSLH       &kp RIGHT
                        &kp LCTRL     &kp LALT     &kp LGUI      &lt LOWER SPACE  &lt RAISE RET   &lt RAISE DEL &kp BSPC  &kp LEFT    &kp UP     &kp DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |   §   |  F1  |  F2  |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |  ~    |   1  |   2  |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |   0   |  F12  |
// |  @    |   !  |   "  |   #  |   =  |   $  |                   |   (  |   )   |   ^   |   &  |   *   |   '   |
// | SHIFT |   <  |   %  |   +  |   {  |   }  |        |  |       |   [  |   ]   |   \   |   /  |   ?   |   |   |
//                |      |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&kp DE_SECT  &kp F1         &kp F2       &kp F3        &kp F4       &kp F5                                 &kp F6       &kp F7       &kp F8       &kp F9      &kp F10      &kp F11
&kp DE_TILD  &kp N1         &kp N2       &kp N3        &kp N4       &kp N5                                 &kp N6       &kp N7       &kp N8       &kp N9      &kp N0       &kp F12
&kp LA(L)    &kp DE_EXLM    &kp DE_DQUO  &kp DE_HASH   &kp DE_EQL   &kp DLLR                               &kp DE_LPRN  &kp DE_RPRN  &kp DE_CIRC  &kp DE_AMPR &kp DE_ASTR  &kp DE_QUOT
&kp LSHFT    &kp DE_LABK    &kp DE_PERC  &kp DE_PLUS   &kp DE_LCBR  &kp DE_RCBR  &trans      &trans        &kp DE_LBRC  &kp DE_RBRC  &kp DE_BSLS  &kp DE_SLSH &kp DE_QUES  &kp DE_PIPE
                            &trans       &trans        &trans       &trans       &trans      &kp RG(BSPC)  &kp RA(BSPC)       &trans       &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |trans| BT1   | BT2  |  BT3  |  BT4  |  BT5  |                |C_PREV| C_PP | C_NEXT|    - |       |      |
// |PASTE|  Comm | |<<< |   ^   | >>>|  | PG_UP |                |   7  |   8  |   9   |      |       |      |
// |COPY |   <<  |  <   |   v   |   >   |  >>   |                |   4  |   5  |   6   |      |       |      |
// |SHIFT| UNDO  |COPY  | PASTE |AddLine|CO Line|      |  |      |   1  |   2  |   3   |      |       |      |
//               |      |       |       |       |      |  |      |      |   0  |       |      |
            bindings = <
&trans       &bt BT_SEL 0   &bt BT_SEL 1    &bt BT_SEL 2 &bt BT_SEL 3   &bt BT_SEL 4                              &kp C_PREV   &kp C_PP    &kp C_NEXT  &trans   &trans   &trans
&kp K_PASTE  &kp LG(LS(N7)) &kp RG(LEFT)    &kp UP       &kp RG(RIGHT)  &kp PG_UP                                 &kp N7       &kp N8      &kp N9      &trans   &trans   &trans
&kp K_COPY   &kp RA(LEFT)   &kp LEFT        &kp DOWN     &kp RIGHT      &kp RA(RIGHT)                             &kp N4       &kp N5      &kp N6      &trans   &trans   &trans
&trans       &kp K_UNDO     &kp K_COPY      &kp K_PASTE  &kp RA(DOWN)   &kp RA(RS(DOWN))    &trans      &trans    &kp N1       &kp N2      &kp N3      &trans   &trans   &trans
                            &trans          &trans       &trans         &trans  &trans      &trans      &trans    &kp RA(BSPC) &kp N0      &kp RG(BSPC)
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };
    };
};